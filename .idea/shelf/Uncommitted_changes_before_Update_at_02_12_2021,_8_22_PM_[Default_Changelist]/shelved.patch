Index: app/src/main/java/com/buzzware/iride/fragments/ConfirmPickupActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.buzzware.iride.fragments;\n\nimport android.annotation.SuppressLint;\nimport android.app.Dialog;\nimport android.content.Intent;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.RadioGroup;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.databinding.DataBindingUtil;\n\nimport com.buzzware.iride.R;\nimport com.buzzware.iride.databinding.AddCardDialogBinding;\nimport com.buzzware.iride.databinding.FragmentConfirmPickupBinding;\nimport com.buzzware.iride.databinding.PaymentDialogBinding;\nimport com.buzzware.iride.models.RideModel;\nimport com.buzzware.iride.models.SearchedPlaceModel;\nimport com.buzzware.iride.models.TripDetail;\nimport com.buzzware.iride.response.directions.DirectionsApiResponse;\nimport com.buzzware.iride.response.directions.Leg;\nimport com.buzzware.iride.response.directions.Route;\nimport com.buzzware.iride.response.directions.Step;\nimport com.buzzware.iride.retrofit.Controller;\nimport com.buzzware.iride.screens.BaseNavDrawer;\nimport com.buzzware.iride.utils.AppConstants;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.OnMapReadyCallback;\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.MarkerOptions;\nimport com.google.android.gms.maps.model.PolylineOptions;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.gson.Gson;\nimport com.google.maps.android.PolyUtil;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\n\n\npublic class ConfirmPickupActivity extends BaseNavDrawer implements OnMapReadyCallback, View.OnClickListener {\n\n    FragmentConfirmPickupBinding mBinding;\n\n    GoogleMap mMap;\n\n    SearchedPlaceModel pickUpLocation, destinationLocation;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n\n        onCreateView();\n    }\n\n    private void onCreateView() {\n\n        mBinding = FragmentConfirmPickupBinding.inflate(getLayoutInflater());\n\n        setContentView(mBinding.getRoot());\n\n        getExtrasFromIntent();\n\n        init();\n\n        setListeners();\n    }\n\n    private void setListeners() {\n\n        mBinding.btnConfirmPickup.setOnClickListener(this);\n\n        mBinding.pricingRG.setOnCheckedChangeListener(this::onCheckedChanged);\n    }\n\n    @SuppressLint(\"SetTextI18n\")\n    public void onCheckedChanged(RadioGroup group, int checkedId) {\n\n        if (checkedId == mBinding.iRideRB.getId()) {\n\n            mBinding.estimateTV.setText(\"NPR 100\");\n\n        } else if (checkedId == mBinding.luxRB.getId()) {\n\n            mBinding.estimateTV.setText(\"NPR 150\");\n\n        } else {\n\n            mBinding.estimateTV.setText(\"NPR 200\");\n\n        }\n\n    }\n\n    private void getExtrasFromIntent() {\n\n        if (getIntent().getExtras() != null) {\n\n            Bundle b = getIntent().getExtras();\n\n            pickUpLocation = b.getParcelable(\"pickup\");\n\n            destinationLocation = b.getParcelable(\"destination\");\n\n        }\n\n    }\n\n    private void init() {\n\n        if (pickUpLocation != null) {\n\n            mBinding.pickUpTV.setText(pickUpLocation.address);\n\n        }\n\n\n        if (destinationLocation != null) {\n\n            mBinding.destinationTV.setText(destinationLocation.address);\n\n        }\n    }\n\n    @Override\n    public void onMapReady(@NonNull GoogleMap googleMap) {\n        mMap = googleMap;\n        mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);\n///move to dummy location\n        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(pickUpLocation.lat, pickUpLocation.lng), 12.0F));\n        getDirections();\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n\n        resumeMap();\n\n    }\n\n    private void resumeMap() {\n\n        mBinding.homeMapView.onCreate(null);\n\n        mBinding.homeMapView.onResume();\n\n        mBinding.homeMapView.getMapAsync(this);\n\n    }\n\n    Call<String> reverseCall;\n\n    void getDirections() {\n\n        String url = \"/maps/api/directions/json?origin=\" + pickUpLocation.lat + \",\" + pickUpLocation.lng + \"&destination=\" + destinationLocation.lat + \",\" + destinationLocation.lng + \"&key=\" + AppConstants.GOOGLE_PLACES_API_KEY;\n\n        if (reverseCall != null) {\n\n            reverseCall.cancel();\n\n            reverseCall = null;\n        }\n\n        reverseCall = Controller.getApi().getPlaces(url, \"asdasd\");\n\n        reverseCall.enqueue(new Callback<String>() {\n            @Override\n            public void onResponse(@NonNull Call<String> call, @NonNull Response<String> response) {\n\n                reverseCall = null;\n\n                Gson gson = new Gson();\n\n                if (response.body() != null && response.isSuccessful()) {\n\n                    DirectionsApiResponse resp = gson.fromJson(response.body(), DirectionsApiResponse.class);\n\n                    drawPaths(resp);\n\n                }\n            }\n\n            @Override\n            public void onFailure(@NonNull Call<String> call, @NonNull Throwable t) {\n                reverseCall = null;\n            }\n        });\n    }\n\n    private void drawPaths(DirectionsApiResponse res) {\n\n        ArrayList<LatLng> path = new ArrayList<>();\n\n        try {\n\n            if (res.routes != null && res.routes.size() > 0) {\n\n                Route route = res.routes.get(0);\n\n                if (route.legs != null) {\n\n                    for (int i = 0; i < route.legs.size(); i++) {\n\n                        Leg leg = route.legs.get(i);\n\n                        if (leg.steps != null) {\n\n                            for (int j = 0; j < leg.steps.size(); j++) {\n\n                                Step step1 = leg.steps.get(j);\n\n                                if (step1.polyline != null) {\n\n                                    List<LatLng> decoded = PolyUtil.decode(step1.polyline.points);\n\n                                    path.addAll(decoded);\n\n                                }\n\n                            }\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n        } catch (Exception ex) {\n\n        }\n\n        //Draw the polyline\n        if (path.size() > 0) {\n\n            PolylineOptions opts = new PolylineOptions().addAll(path).color(Color.BLACK).width(10);\n\n            mMap.addPolyline(opts);\n\n        }\n\n        mMap.addMarker(new MarkerOptions()\n                .position(new LatLng(pickUpLocation.lat, pickUpLocation.lng))\n                .title(\"Pickup Location\")\n                .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED)));\n\n\n        mMap.addMarker(new MarkerOptions()\n                .position(new LatLng(destinationLocation.lat, destinationLocation.lng))\n                .title(\"Destination\")\n                .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED)));\n\n    }\n\n    @Override\n    public void onClick(View v) {\n\n        super.onClick(v);\n\n        if (v == mBinding.btnConfirmPickup) {\n\n            //TODO Handle payment and then place order\n//            ShowPaymentDialog();\n\n            placeOrder();\n        }\n    }\n\n    private void placeOrder() {\n\n        RideModel rideModel = new RideModel();\n\n        rideModel.bookingDate = new Date().getTime();\n\n        rideModel.tripDetail = new TripDetail();\n\n        rideModel.tripDetail.pickUp = pickUpLocation;\n\n        rideModel.rideType = \"\";\n\n        rideModel.tripDetail.destinations  = new ArrayList<>();\n\n        rideModel.tripDetail.destinations.add(destinationLocation);\n\n\n\n        rideModel.userId = getUserId();\n\n        rideModel.price = \"100\";\n\n        rideModel.status = \"booked\";\n\n        FirebaseFirestore.getInstance().collection(\"Bookings\")\n                .document().set(rideModel);\n\n        Toast.makeText(this,\"Successfully Booked\",Toast.LENGTH_LONG).show();\n\n        startActivity(new Intent(this, HomeActivity.class)\n                .addFlags(\n                        Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP\n                )\n        );\n\n        finish();\n\n    }\n\n    private void ShowPaymentDialog() {\n\n        Dialog myDialog = new Dialog(this);\n\n        PaymentDialogBinding mBinding = DataBindingUtil.inflate(\n                LayoutInflater.from(myDialog.getContext()),\n                R.layout.payment_dialog,\n                myDialog.findViewById(R.id.parentt),\n                false);\n\n        myDialog.setContentView(mBinding.getRoot());\n\n        myDialog.setCancelable(true);\n\n        myDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n\n        myDialog.show();\n\n        mBinding.cardItem.setOnClickListener(v -> {\n\n            myDialog.dismiss();\n\n        });\n\n        mBinding.btnAddPayment.setOnClickListener(v -> {\n            myDialog.dismiss();\n            ShowAddPaymentDialog();\n        });\n    }\n\n    private void ShowAddPaymentDialog() {\n\n        Dialog myDialog = new Dialog(this);\n\n        AddCardDialogBinding mBinding = DataBindingUtil.inflate(\n                LayoutInflater.from(myDialog.getContext()),\n                R.layout.add_card_dialog,\n                myDialog.findViewById(R.id.parent),\n                false);\n\n        myDialog.setContentView(mBinding.getRoot());\n\n        myDialog.setCancelable(true);\n\n        myDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n\n        myDialog.show();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/buzzware/iride/fragments/ConfirmPickupActivity.java	(revision 35dcba0c01dcd91fc3bc09303a0745f6fae2c3d8)
+++ app/src/main/java/com/buzzware/iride/fragments/ConfirmPickupActivity.java	(date 1638457161908)
@@ -62,6 +62,7 @@
         super.onCreate(savedInstanceState);
 
         onCreateView();
+
     }
 
     private void onCreateView() {
@@ -75,6 +76,7 @@
         init();
 
         setListeners();
+
     }
 
     private void setListeners() {
@@ -82,6 +84,7 @@
         mBinding.btnConfirmPickup.setOnClickListener(this);
 
         mBinding.pricingRG.setOnCheckedChangeListener(this::onCheckedChanged);
+
     }
 
     @SuppressLint("SetTextI18n")
@@ -125,7 +128,6 @@
 
         }
 
-
         if (destinationLocation != null) {
 
             mBinding.destinationTV.setText(destinationLocation.address);
